openapi: 3.0.2
info:
  title: Shopeton Shop-link API Documentation
  description: |
    # Notes

    ## User
    our user have five important fields
    ### 1-username 
        username is set None by default we dont need it for authentication at all 
    #### 2-password
        password is seeting by a python secret password generator which have 10 char
    #### 3-mobile
        every user must have a unique mobile number
    #### 4-otp
        otp is a random number between 1000 to 9999 generated by python random function
    #### 5-otp-creation
        the time otp is created 
    

    ## JWT/Authentication
    ### fisrt-mobile-catch
    #### after requesting phone number a random number (otp) genrate and its value and time set to the user
    ### second-otp-catch
    #### after requesting otp we receive a response with two keys 'access' and 'refresh'
    
  version: "v1"

externalDocs:
  description: Find out more about Shopeton-project
  url: "https://www.notion.so/shopeton/"
  
servers:
  - url: "https://domain.com/api/v1"
  
tags:
  - name: user
  - name: shop
  - name: product
  - name: category

paths:

  "/user/register":
    post:
      tags:
        - user
      summary: create user and send otp
      parameters:
        - name: mobile
          required: True
          in: query
          schema:
            type: string

      responses:
        "201":
          $ref: "#/components/responses/UserObject"

  "/user/verify":
    post:
      tags:
        - user
      summary: create user and send otp
      parameters:
        - name: otp
          required: True
          in: query
          schema:
            type: integer

      responses:
        "201":
          $ref: "#/components/responses/CreatedObject"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
                
  "/shop/create":
    post:
      tags:
        - shop
      summary: create a shop
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShopCreation"
          
      responses:
        "201":
          description: created a shop
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShopCreation"


        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
                
  "/shop/rud/{shop_id}":
    parameters:
        - name: shop_id
          required: True
          in: path
          schema:
            type: string
    get:
      tags:
        - shop
      summary: find a shop by id
      
      responses:
        "201":
          description: read an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShopCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
    put:
      tags:
        - shop
      summary: update a shop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShopCreation"
    
      responses:
        "201":
          description: updated a shop
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShopCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
    delete:
      tags:
        - shop
      summary: delete a shop

      responses:
        "202":
          description: shop deleted successfully


        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
                
  "/shop/list":
    get:
      tags:
        - shop
      summary: list shops
  
      responses:
        "200":
          description: list of all shops
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShopCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
                
  "/product/create":
    post:
      tags:
        - product
      summary: create a product
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreation"

      responses:
        "201":
          description: created a product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCreation"


        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
  
  "/product/rud/{product_id}":
    parameters:
        - name: product_id
          required: True
          in: path
          schema:
            type: string
    get:
      tags:
        - product
      summary: find a product by id

      responses:
        "201":
          description: found a product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
    put:
      tags:
        - product
      summary: update a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreation"
        
      responses:
        "201":
          description: updated a product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCreation"


        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
    delete:
      tags:
        - product
      summary: delete a product

      responses:
        "202":
          description: product deleted successfully


        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
  
  "/product/list":
    get:
      tags:
        - product
      summary: list products
  
      responses:
        "200":
          description: list of all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
                
  "/category/create":
    post:
      tags:
        - category
      summary: create a category
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryCreation"

      responses:
        "201":
          description: created a category
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
                
  "/category/rud/{category_id}":
    parameters:
        - name: category_id
          required: True
          in: path
          schema:
            type: integer
    get:
      tags:
        - category
      summary: find a category by id

      responses:
        "201":
          description: found a category
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
    put:
      tags:
        - category
      summary: update a category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryCreation"
      
      responses:
        "201":
          description: updated a category
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryCreation"


        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
    delete:
      tags:
        - category
      summary: delete a category

      responses:
        "202":
          description: category deleted successfully

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"
  
  "/category/list":
    get:
      tags:
        - category
      summary: list categories
  
      responses:
        "200":
          description: list of all categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryCreation"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_UNAUTHORIZED"

        "403":
          description: not allowed to perform this action
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_FORBIDDEN"
        "404":
          description: admission not found
          content:
            application/json:
              schema:
                $ref: "errors.yaml#/components/schemas/E_ADMISSION_NOT_FOUND"

components:
  schemas:

    User:
      type: object
      properties:
        username:
          type: string
          default: None
          
        phone: 
          type: string
          description: phone number of a user
          
        verifyCode:
          type: integer
          nullable: True
          
        verifyCode_create_time:
          type: string
          description: the time user is created
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
        instagram_verify:
          type: boolean
          default: False
        
        instagram_account:
          type: string
          nullable: True
          
        is_ban:
          type: boolean
          default: False
        
        is_shop_owner:
          type: boolean
          default: False
          
        is_shop_admin:
          type: boolean
          default: False
          
        created:
          type: string
          description: the time user is created 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
        modified:
          type: string
          description: the time user is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
      required: 
        - phone
        
    ShopCreation:
      type: object
      properties:
        user: 
          $ref: "#/components/schemas/User" 
          
        admins:
          type: array
          items:
            $ref: "#/components/schemas/User"
        
        name:
          type: string
          
        image:
          type: string
          format: binary
        
        slug:
          type: string
        
        created:
          type: string
          description: the time user is created 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time user is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
            
        description:
          type: string
          nullable: True
          
        is_verify:
          type: boolean
          default: False
          
        priority:
          type: integer
          default: 0
          
        instagram_link:
          type: string
          nullable: True
        
        telegram_link:
          type: string
          nullable: True
          
        website_link:
          type: string
          nullable: True
        
        evidence:
          type: string
          format: binary
          nullable: True
        
        rating:
          type: number
        
        is_ban:
          type: boolean
          default: False
          
      required: 
        - name
        - image
        - slug
        
     
    CategoryCreation:
      type: object
      
      properties:
        name:
          type: string
          
        image:
          type: string
          format: binary
          
        created:
          type: string
          description: the time category is created 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time category is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
      
      required: 
        - name
        - image
    
    ProductCreation:
      type: object
      
      properties:
      
        name:
          type: string
          
        shop:
          $ref: "#/components/schemas/ShopCreation"
        
        category:
          $ref: "#/components/schemas/CategoryCreation"
          
        image1:
          type: string
          format: binary
          nullable: True
        
        image2:
          type: string
          format: binary
          nullable: True
          
        image3:
          type: string
          format: binary
          nullable: True
          
        image4:
          type: string
          format: binary
          nullable: True
        
        image5:
          type: string
          format: binary
          nullable: True
          
        image6:
          type: string
          format: binary
          nullable: True
        
        payment_link:
          type: string
          nullable: True
        
        price: 
          type: integer
        
        last_price:
          type: integer
        
        off:
          type: integer
        
        description:
          type: string
          nullable: True
        
        created:
          type: string
          description: the time product is created 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
        modified:
          type: string
          description: the time product is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        first_page:
          type: boolean
          
        priority:
          type: integer
        
        is_hide:
          type: boolean
          
        rating:
          type: integer
          
      required:
        - name
        - category
        - image1
        - last_price
        - price 
  
  responses:
  
    UserObject:
      description: a user object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User" 
    
    CreatedObject:
      description: an object created
      content: 
        application/json: 
          schema: 
            type: string 
            example: created
            

  securitySchemes:
    AccessJWT:
      description: |

        use `user/auth/token` with provided authorization code from Serebrum to obtain `access` and `refresh` token,
        or use `user/auth/login` with credentials to obtain `access` and `refresh` token

        use `/user/auth/refresh` to refresh `access` token

        include access token as bearer authoriztion header to authorize
        ```
        Authorization: Bearer <access>
        ```
      type: http
      scheme: bearer
      bearerFormat: JWT
